// Generated by gencpp from file arm_controller/Nav.msg
// DO NOT EDIT!


#ifndef ARM_CONTROLLER_MESSAGE_NAV_H
#define ARM_CONTROLLER_MESSAGE_NAV_H

#include <ros/service_traits.h>


#include <arm_controller/NavRequest.h>
#include <arm_controller/NavResponse.h>


namespace arm_controller
{

struct Nav
{

typedef NavRequest Request;
typedef NavResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Nav
} // namespace arm_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_controller::Nav > {
  static const char* value()
  {
    return "aee342bdb1678c75b6e000ad4c3a77bf";
  }

  static const char* value(const ::arm_controller::Nav&) { return value(); }
};

template<>
struct DataType< ::arm_controller::Nav > {
  static const char* value()
  {
    return "arm_controller/Nav";
  }

  static const char* value(const ::arm_controller::Nav&) { return value(); }
};


// service_traits::MD5Sum< ::arm_controller::NavRequest> should match
// service_traits::MD5Sum< ::arm_controller::Nav >
template<>
struct MD5Sum< ::arm_controller::NavRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_controller::Nav >::value();
  }
  static const char* value(const ::arm_controller::NavRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_controller::NavRequest> should match
// service_traits::DataType< ::arm_controller::Nav >
template<>
struct DataType< ::arm_controller::NavRequest>
{
  static const char* value()
  {
    return DataType< ::arm_controller::Nav >::value();
  }
  static const char* value(const ::arm_controller::NavRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_controller::NavResponse> should match
// service_traits::MD5Sum< ::arm_controller::Nav >
template<>
struct MD5Sum< ::arm_controller::NavResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_controller::Nav >::value();
  }
  static const char* value(const ::arm_controller::NavResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_controller::NavResponse> should match
// service_traits::DataType< ::arm_controller::Nav >
template<>
struct DataType< ::arm_controller::NavResponse>
{
  static const char* value()
  {
    return DataType< ::arm_controller::Nav >::value();
  }
  static const char* value(const ::arm_controller::NavResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROLLER_MESSAGE_NAV_H
