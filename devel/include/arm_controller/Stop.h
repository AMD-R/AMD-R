// Generated by gencpp from file arm_controller/Stop.msg
// DO NOT EDIT!


#ifndef ARM_CONTROLLER_MESSAGE_STOP_H
#define ARM_CONTROLLER_MESSAGE_STOP_H

#include <ros/service_traits.h>


#include <arm_controller/StopRequest.h>
#include <arm_controller/StopResponse.h>


namespace arm_controller
{

struct Stop
{

typedef StopRequest Request;
typedef StopResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Stop
} // namespace arm_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_controller::Stop > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::arm_controller::Stop&) { return value(); }
};

template<>
struct DataType< ::arm_controller::Stop > {
  static const char* value()
  {
    return "arm_controller/Stop";
  }

  static const char* value(const ::arm_controller::Stop&) { return value(); }
};


// service_traits::MD5Sum< ::arm_controller::StopRequest> should match
// service_traits::MD5Sum< ::arm_controller::Stop >
template<>
struct MD5Sum< ::arm_controller::StopRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_controller::Stop >::value();
  }
  static const char* value(const ::arm_controller::StopRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_controller::StopRequest> should match
// service_traits::DataType< ::arm_controller::Stop >
template<>
struct DataType< ::arm_controller::StopRequest>
{
  static const char* value()
  {
    return DataType< ::arm_controller::Stop >::value();
  }
  static const char* value(const ::arm_controller::StopRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_controller::StopResponse> should match
// service_traits::MD5Sum< ::arm_controller::Stop >
template<>
struct MD5Sum< ::arm_controller::StopResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_controller::Stop >::value();
  }
  static const char* value(const ::arm_controller::StopResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_controller::StopResponse> should match
// service_traits::DataType< ::arm_controller::Stop >
template<>
struct DataType< ::arm_controller::StopResponse>
{
  static const char* value()
  {
    return DataType< ::arm_controller::Stop >::value();
  }
  static const char* value(const ::arm_controller::StopResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROLLER_MESSAGE_STOP_H
