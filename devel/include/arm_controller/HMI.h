// Generated by gencpp from file arm_controller/HMI.msg
// DO NOT EDIT!


#ifndef ARM_CONTROLLER_MESSAGE_HMI_H
#define ARM_CONTROLLER_MESSAGE_HMI_H

#include <ros/service_traits.h>


#include <arm_controller/HMIRequest.h>
#include <arm_controller/HMIResponse.h>


namespace arm_controller
{

struct HMI
{

typedef HMIRequest Request;
typedef HMIResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct HMI
} // namespace arm_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_controller::HMI > {
  static const char* value()
  {
    return "cb52c7deab716044e28d7b42e43ad1b3";
  }

  static const char* value(const ::arm_controller::HMI&) { return value(); }
};

template<>
struct DataType< ::arm_controller::HMI > {
  static const char* value()
  {
    return "arm_controller/HMI";
  }

  static const char* value(const ::arm_controller::HMI&) { return value(); }
};


// service_traits::MD5Sum< ::arm_controller::HMIRequest> should match
// service_traits::MD5Sum< ::arm_controller::HMI >
template<>
struct MD5Sum< ::arm_controller::HMIRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_controller::HMI >::value();
  }
  static const char* value(const ::arm_controller::HMIRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_controller::HMIRequest> should match
// service_traits::DataType< ::arm_controller::HMI >
template<>
struct DataType< ::arm_controller::HMIRequest>
{
  static const char* value()
  {
    return DataType< ::arm_controller::HMI >::value();
  }
  static const char* value(const ::arm_controller::HMIRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_controller::HMIResponse> should match
// service_traits::MD5Sum< ::arm_controller::HMI >
template<>
struct MD5Sum< ::arm_controller::HMIResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_controller::HMI >::value();
  }
  static const char* value(const ::arm_controller::HMIResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_controller::HMIResponse> should match
// service_traits::DataType< ::arm_controller::HMI >
template<>
struct DataType< ::arm_controller::HMIResponse>
{
  static const char* value()
  {
    return DataType< ::arm_controller::HMI >::value();
  }
  static const char* value(const ::arm_controller::HMIResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROLLER_MESSAGE_HMI_H
